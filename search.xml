<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇博文</title>
    <url>/2021/03/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>语法知识</title>
    <url>/2021/03/20/%E8%AF%AD%E6%B3%95%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<ul>
<li>为什么 main 方法是静态的（static）？</li>
<li>为什么main方法是公有的（public） ？</li>
<li>为什么 main 方法没有返回值（Void）？</li>
<li>总结</li>
</ul>
<span id="more"></span>

<hr>
<p>Main 方法是我们学习 Java 编程语言时知道的第一个方法，你是否曾经想过为什么 main 方法是 public、static、void 的。当然，很多人首先学的是 C 和 C++，但是在 Java 中 main 方法与前者有些细微的不同，它不会返回任何值，为什么 main 方式是 public、static、void，这篇文章尝试去找到一些答案。</p>
<p>Main 方法是 Java 程序的入口，记住，我们这里不会讨论 Servlet、MIDlet 和其他任何容器管理的 java 程序，在 java 核心编程中，JVM 会查找类中的 public static void main(String[]args)，如果找不到该方法就抛出错误 NoSuchMethodError:main 程序终止。</p>
<p>Main 方法必须严格遵循它的语法规则，方法签名必须是 public static void，参数是字符串数组类型，如果是 Java1.5 及以后的版本还可以使用可变参数：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public static void main(String... args)</span><br></pre></td></tr></table></figure>

<h1 id="为什么-main-方法是静态的（static）？"><a href="#为什么-main-方法是静态的（static）？" class="headerlink" title="为什么 main 方法是静态的（static）？"></a>为什么 main 方法是静态的（static）？</h1><p>1.正因为 main 方法是静态的，JVM 调用这个方法就不需要创建任何包含这个 main 方法的实例。</p>
<p>2.因为 C 和 C++ 同样有类似的 main 方法作为程序执行的入口。</p>
<p>3.如果 main 方法不声明为静态的，JVM 就必须创建 main 类的实例，因为构造器可以被重载，JVM 就没法确定调用哪个 main 方法。</p>
<p>4.静态方法和静态数据加载到内存就可以直接调用而不需要像实例方法一样创建实例后才能调用，如果 main 方法是静态的，那么它就会被加载到 JVM 上下文中成为可执行的方法。</p>
<h1 id="为什么main方法是公有的（public）-？"><a href="#为什么main方法是公有的（public）-？" class="headerlink" title="为什么main方法是公有的（public） ？"></a>为什么main方法是公有的（public） ？</h1><p>Java 指定了一些可访问的修饰符如：private、protected、public，任何方法或变量都可以声明为 public，Java 可以从该类之外的地方访问。因为 main 方法是公共的，JVM 就可以轻松的访问执行它。</p>
<h1 id="为什么-main-方法没有返回值（Void）？"><a href="#为什么-main-方法没有返回值（Void）？" class="headerlink" title="为什么 main 方法没有返回值（Void）？"></a>为什么 main 方法没有返回值（Void）？</h1><p>因为 main 返回任何值对程序都没任何意义，所以设计成 void，意味着 main 不会有任何值返回。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.main 方法必须声明为 public、static、void，否则 JVM 没法运行程序 。</p>
<p>2.如果 JVM 找不到 main 方法就抛出 NoSuchMethodError:main 异常，例如：如果你运行命令：java HelloWrold，JVM 就会在 HelloWorld.class 文件中搜索 public static void main (String[] args) 方法。</p>
<p>3.main 方式是程序的入口，程序执行的开始处。</p>
<p>4.main 方法被一个特定的线程 ”main” 运行，程序会一直运行直到 main 线程结束或者 non-daemon 线程终止。</p>
<p>5.当你看到“Exception in Thread main”如：Excpetion in Thread main:Java.lang.NullPointedException，意味着异常来自于 main 线程。</p>
<p>6.你可以声明 main 方法使用 java1.5 的可变参数的方式如：publicstaticvoid main(String… args)。</p>
<p>7.除了 static、void、和 public，你可以使用 final，synchronized、和 strictfp 修饰符在 main 方法的签名中，如：publicstrictfpfinalsynchronizedstaticvoid main(String[] args)。</p>
<p>8.main 方法在 Java 可以像其他方法一样被重载，但是 JVM 只会调用上面这种签名规范的 main 方法。</p>
<p>9.你可以使用 throws 子句在方法签名中，可以抛出任何 checked 和 unchecked 异常。</p>
<p>10.静态初始化块在 JVM 调用 main 方法前被执行，它们在类被 JVM 加载到内存的时候就被执行了。</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title>类和对象</title>
    <url>/2021/03/22/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<p>slg</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>配置文档</title>
    <url>/2021/03/21/%E9%85%8D%E7%BD%AE%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>测试是否可以直接新建文档</p>
]]></content>
      <categories>
        <category>学习</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora入门技巧</title>
    <url>/2021/03/22/Typora%E5%85%A5%E9%97%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>本篇文章主要就是记录一下MarkDown语法。md语法在所有支持 <code>.md</code> 的软件都是通用的，而快捷键是在<code>Typora</code>软件中适用的。</p>
<ol>
<li>使用  <code>Ctrl+Shift+K</code>创建代码块： </li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">右下角 [选择语言]  ：</span><br><span class="line">                  输入 java &#x2F; c++ &#x2F; shell &#x2F; javascript 等任意语言</span><br></pre></td></tr></table></figure>



<!------read more------>

<ol start="2">
<li>使用   <strong><code>&gt;</code></strong>   进行引用，效果如下：</li>
</ol>
<blockquote>
<p>   引用内容</p>
</blockquote>
<ol start="3">
<li>使用  <code>#</code> 更改标题大小</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br></pre></td></tr></table></figure>



<ol start="4">
<li>更改字体格式</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">斜体        *文字内容*</span><br><span class="line">加粗       **文字内容**</span><br><span class="line">高亮显示    ==文字内容==</span><br><span class="line">删除线      ~~文字内容~~</span><br></pre></td></tr></table></figure>

<blockquote>
<p> <em>斜体</em>     <strong>加粗</strong>     ==高亮显示==      <del>删除线</del></p>
</blockquote>
<ol start="5">
<li>双击 <code>Ctrl+T</code> 建立表格</li>
</ol>
<table>
<thead>
<tr>
<th align="left">快捷键</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Ctrl + T</td>
<td align="left">新建表格</td>
</tr>
<tr>
<td align="left">双击Enter</td>
<td align="left">清除所有格式，另起一行</td>
</tr>
<tr>
<td align="left">Ctrl+U</td>
<td align="left"><u>下划线</u></td>
</tr>
<tr>
<td align="left">Ctrl+B</td>
<td align="left"><strong>加粗</strong></td>
</tr>
<tr>
<td align="left">Ctrl+I</td>
<td align="left"><em>斜体</em></td>
</tr>
</tbody></table>
<ol start="6">
<li>使用 <code>---</code>进行分割</li>
</ol>
<hr>
<p>创建一条分割线   —</p>
<hr>
<ol start="7">
<li>图片插入</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//本地图片</span></span><br><span class="line">[自定义图片名称]（图片路径）</span><br><span class="line">    </span><br><span class="line">ex: [我的照片]（/images/pic/mine.jpg）</span><br></pre></td></tr></table></figure>



<ol start="8">
<li>超链接</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line"></span><br><span class="line">[我的blog](https:<span class="comment">//eniac286.github.io/)</span></span><br></pre></td></tr></table></figure>

<p>ex： <a href="https://eniac286.github.io/">我的blog</a></p>
<ol start="9">
<li>列表</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无序列表：+ - * 均可创建</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">+ 目录<span class="number">2</span></span><br><span class="line">* 目录<span class="number">3</span></span><br></pre></td></tr></table></figure>

<ul>
<li>目录1   </li>
</ul>
<ul>
<li>目录2</li>
<li>目录3</li>
</ul>
<ol start="10">
<li>使用  <code>ctrl+shift+` </code>   创建特殊标记 ：</li>
</ol>
<p>无特殊标记      <code>有特殊标记</code></p>
]]></content>
      <categories>
        <category>工具</category>
        <category>Typora</category>
      </categories>
      <tags>
        <tag>基础</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
</search>
